// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250205205636_postings")]
    partial class postings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "IT & Programming"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Marketing & PR"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Sales & Purchases"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Administration & Management"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Finance & Accounting"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Healthcare"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Education & Teaching"
                        },
                        new
                        {
                            Id = 8,
                            Title = "Engineering & Technical Jobs"
                        },
                        new
                        {
                            Id = 9,
                            Title = "Logistics & Transportation"
                        },
                        new
                        {
                            Id = 10,
                            Title = "Services & Manual Jobs"
                        },
                        new
                        {
                            Id = 11,
                            Title = "Tourism & Hospitality"
                        },
                        new
                        {
                            Id = 12,
                            Title = "Law & Consulting"
                        },
                        new
                        {
                            Id = 13,
                            Title = "Design & Creative Industries"
                        },
                        new
                        {
                            Id = 14,
                            Title = "Labor & Physical Jobs"
                        },
                        new
                        {
                            Id = 15,
                            Title = "Real Estate & Construction"
                        },
                        new
                        {
                            Id = 16,
                            Title = "Human Resources & Recruitment"
                        },
                        new
                        {
                            Id = 17,
                            Title = "Management & Leadership"
                        },
                        new
                        {
                            Id = 18,
                            Title = "Arts & Culture"
                        },
                        new
                        {
                            Id = 19,
                            Title = "Science & Research"
                        },
                        new
                        {
                            Id = 20,
                            Title = "Environment & Sustainability"
                        });
                });

            modelBuilder.Entity("api.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Title = "Sarajevo"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Title = "Banja Luka"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Title = "Tuzla"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Title = "Zenica"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            Title = "Mostar"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            Title = "Bihać"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            Title = "Prijedor"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            Title = "Doboj"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            Title = "Bijeljina"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 1,
                            Title = "Gračanica"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 1,
                            Title = "Brčko"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 1,
                            Title = "Travnik"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 1,
                            Title = "Srebrenica"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 1,
                            Title = "Cazin"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 1,
                            Title = "Goražde"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 1,
                            Title = "Bugojno"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 1,
                            Title = "Trebinje"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 1,
                            Title = "Jajce"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 1,
                            Title = "Maglaj"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 1,
                            Title = "Kakanj"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 2,
                            Title = "Beograd"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 2,
                            Title = "Subotica"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 2,
                            Title = "Kragujevac"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 2,
                            Title = "Niš"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 2,
                            Title = "Novi Pazar"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 3,
                            Title = "Zagreb"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 3,
                            Title = "Šibenik"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 3,
                            Title = "Split"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 3,
                            Title = "Rijeka"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 3,
                            Title = "Osijek"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 4,
                            Title = "Podgorica"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 4,
                            Title = "Ulcinj"
                        },
                        new
                        {
                            Id = 33,
                            CountryId = 4,
                            Title = "Budva"
                        },
                        new
                        {
                            Id = 34,
                            CountryId = 4,
                            Title = "Kotor"
                        });
                });

            modelBuilder.Entity("api.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Bosna i Hercegovina"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Srbija"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Hrvatska"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Crna Gora"
                        });
                });

            modelBuilder.Entity("api.Models.Posting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isPublic")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Postings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CityId = 1,
                            Description = "Looking for an experienced C# developer to join our team.",
                            Title = "Software Developer Needed",
                            TypeId = 2,
                            UserId = 1,
                            isPublic = true
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CityId = 5,
                            Description = "A creative graphic designer needed for marketing projects.",
                            Title = "Graphic Designer Wanted",
                            TypeId = 2,
                            UserId = 1,
                            isPublic = true
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CityId = 10,
                            Description = "Remote job opportunity for Python and Django developer.",
                            Title = "Remote Python Developer",
                            TypeId = 2,
                            UserId = 1,
                            isPublic = false
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CityId = 8,
                            Description = "We are looking for a data analyst with experience in SQL and Power BI.",
                            Title = "Data Analyst",
                            TypeId = 2,
                            UserId = 1,
                            isPublic = true
                        });
                });

            modelBuilder.Entity("api.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Usluga"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Oglas"
                        });
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.Models.City", b =>
                {
                    b.HasOne("api.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("api.Models.Posting", b =>
                {
                    b.HasOne("api.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");

                    b.Navigation("Type");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
